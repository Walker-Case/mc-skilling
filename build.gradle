plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.spongepowered.mixin' version '0.7.+'
}

version = '1.19.4-1.0.0a'
group = 'com.walkercase.skilling'
archivesBaseName = 'skilling'

mixin {
    add sourceSets.main, "skilling.refmap.json"
    config 'skilling.mixins.json'
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'official', version: '1.19.4'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'skilling'
            property 'forge.enabledGameTestNamespaces', 'skilling'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                skilling {
                    source sourceSets.main
                    ext.refMap = "skilling.refmap.json"
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'skilling'
            property 'forge.enabledGameTestNamespaces', 'skilling'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                skilling {
                    source sourceSets.main
                    ext.refMap = "skilling.refmap.json"
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'skilling'
            property 'forge.enabledGameTestNamespaces', 'skilling'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                skilling {
                    source sourceSets.main
                    ext.refMap = "skilling.refmap.json"
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'skilling', '-mixin.config=skilling.mixins.json', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                skilling {
                    source sourceSets.main
                    ext.refMap = "skilling.refmap.json"
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url "https://www.cursemaven.com"
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.19.4-45.2.8'
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    //Biomes O' Plenty Dependencies
    implementation fg.deobf("curse.maven:terrablender-563928:4441770")
    implementation fg.deobf("curse.maven:biomes-o-plenty-220318:4445167")

    //Jeweler Dependencies
    implementation fg.deobf("curse.maven:jeweler-969533:5074354")
    implementation fg.deobf("curse.maven:curios-309927:4523020")
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "skilling",
                "Specification-Vendor"    : "skilling",
                "Specification-Version"   : "1.19.4-1.0.0a",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "skilling",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
                "MixinConfigs": "skilling.mixins.json",
                'FMLCorePluginContainsFMLMod': 'true',
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
